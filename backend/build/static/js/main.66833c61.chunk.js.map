{"version":3,"sources":["components/BlogList.js","components/UserList.js","components/Notification.js","components/Toggleable.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/AddBlogForm.js","services/login.js","services/users.js","reducers/userReducer.js","components/LoginForm.js","components/User.js","components/CommentForm.js","components/Blog.js","components/Navigation.js","App.js","store.js","index.js"],"names":["Blogs","blogs","useSelector","store","sort","a","b","likes","className","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","map","blog","to","id","title","author","Users","users","state","allUsers","Table","striped","user","username","length","Notification","notifications","content","display","success","successStyle","color","background","fontSize","borderStyle","borderRadius","padding","failStyle","notificationStyle","Togglable","props","useState","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","onClick","buttonLabel","children","baseUrl","token","blogServices","getAll","axios","get","then","response","data","setToken","newToken","create","blogObject","config","headers","Authorization","post","catch","error","likeBlog","put","deleteBlog","delete","addComment","comment","initialState","setNotification","message","dispatch","clearTimeout","window","notificationTimeoutID","setTimeout","type","notification","notificationReducer","action","createBlog","status","newBlog","blogReducer","filter","BlogForm","setTitle","setAuthor","url","setUrl","useDispatch","addBlog","addedSuccessfully","onSubmit","event","preventDefault","value","name","onChange","target","loginService","login","credentials","services","getAllUsers","loggedIn","loginUser","password","localStorage","setItem","JSON","stringify","console","log","userReducer","LoginForm","setUsername","setPassword","handleLogin","User","useParams","find","CommentForm","blogId","setComment","handleSubmit","Blog","href","comments","idx","Navigation","history","useHistory","loggedInUser","paddingRight","clear","push","App","useEffect","userServices","loggedUserJSON","getItem","userInfo","parse","path","reducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66833c61.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blogs = () => {\r\n  const blogs = useSelector(store =>\r\n    store.blogs.sort((a, b) => b.likes - a.likes)\r\n  )\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  return (\r\n    <div className='blogDiv' style={blogStyle}>\r\n      {blogs.map(blog =>\r\n        <p key={blog.id}>\r\n          <Link to={`/blogs/${blog.id}`}>{blog.title}</Link> by {blog.author}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst Users = () => {\r\n  const users = useSelector((state) => state.users.allUsers)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>blogs created</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user =>\r\n            <tr key={user.id}>\r\n              <td><Link to={`/users/${user.id}`}>{user.username}</Link></td>\r\n              <td>{user.blogs.length}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const { content, display, success } = useSelector(store => store.notifications)\r\n\r\n  const successStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    display\r\n  }\r\n\r\n  const failStyle = { ...successStyle, color: 'red' }\r\n\r\n  const notificationStyle = success ? successStyle : failStyle\r\n\r\n  return (\r\n    <div className=\"error\" style={notificationStyle}>\r\n      {content}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (blogObject) => {\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios\r\n    .post(baseUrl, blogObject, config)\r\n    .catch(error => error.response)\r\n  return response\r\n}\r\n\r\nconst likeBlog = async (blogObject) => {\r\n  const response = await axios.put(\r\n    `${baseUrl}/${blogObject.id}`, { ...blogObject, likes: (blogObject.likes + 1) }\r\n  )\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios\r\n    .delete(`${baseUrl}/${id}`, config)\r\n    .catch((error) => error.response)\r\n  return response\r\n}\r\n\r\nconst addComment = async (id, comment) => {\r\n  const response = await axios\r\n    .post(`${baseUrl}/${id}/comments`, { comment })\r\n    .catch(error => error.response)\r\n  return response\r\n}\r\n\r\nconst blogServices = {\r\n  getAll,\r\n  setToken,\r\n  create,\r\n  likeBlog,\r\n  deleteBlog,\r\n  addComment\r\n}\r\nexport default blogServices","const initialState = {\r\n  content: '',\r\n  success: true,\r\n  display: 'none'\r\n}\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'SET_NOTIFICATION':\r\n    return {\r\n      content: action.notification,\r\n      success: action.success,\r\n      display: ''\r\n    }\r\n  case 'CLEAR_NOTIFICATION':\r\n    return { content: '', display: 'none' }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setNotification = (message, success) => {\r\n  return async dispatch => {\r\n    clearTimeout(window.notificationTimeoutID)\r\n    window.notificationTimeoutID = setTimeout(() => {\r\n      dispatch({ type: 'CLEAR_NOTIFICATION' })\r\n    }, 5000)\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      notification: message,\r\n      success\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import blogServices from '../services/blogs'\r\nimport { setNotification } from './notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'LIKE':\r\n    return state.map(blog =>\r\n      blog.id === action.data.id ? action.data : blog\r\n    )\r\n  case 'DELETE_BLOG':\r\n    return state.filter(blog => blog.id !== action.data)\r\n  case 'ADD_COMMENT':\r\n    return state.map(blog =>\r\n      blog.id === action.data.id ? action.data : blog\r\n    )\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogServices.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blog) => {\r\n  return async dispatch => {\r\n    const response = await blogServices.create(blog)\r\n    if (response.status === 201) {\r\n      const newBlog = response.data\r\n      dispatch({\r\n        type: 'NEW_BLOG',\r\n        data: newBlog\r\n      })\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async dispatch => {\r\n    await blogServices.likeBlog(blog)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: { ...blog, likes: (blog.likes + 1) }\r\n    })\r\n    dispatch(setNotification(`You liked ${blog.title}`, true))\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    let response = await blogServices.deleteBlog(id)\r\n    if (response.status === 204) {\r\n      dispatch({\r\n        type: 'DELETE_BLOG',\r\n        data: id\r\n      })\r\n      dispatch(setNotification('Blog deleted', true))\r\n    } else {\r\n      dispatch(setNotification('You are not authorized to delete that', false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n  return async dispatch => {\r\n    let response = await blogServices.addComment(id, comment)\r\n    if (response.status === 201) {\r\n      const blog = response.data\r\n      dispatch({\r\n        type: 'ADD_COMMENT',\r\n        data: blog\r\n      })\r\n      dispatch(setNotification('Comment Added', true))\r\n    } else {\r\n      dispatch(setNotification('Blog not found', false))\r\n    }\r\n  }\r\n}\r\n\r\nexport default blogReducer","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst BlogForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const submitBlog = (event) => {\r\n    event.preventDefault()\r\n    addBlog({\r\n      title,\r\n      author,\r\n      url\r\n    })\r\n    setUrl('')\r\n    setAuthor('')\r\n    setTitle('')\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const addBlog = async (blogObject) => {\r\n    const addedSuccessfully = await dispatch(createBlog(blogObject))\r\n    if (addedSuccessfully) {\r\n      dispatch(setNotification(`added blog ${blogObject.title}`, true))\r\n    } else {\r\n      dispatch(setNotification('Unable to add blog', false))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitBlog}>\r\n      <h2>Create new blog</h2>\r\n      <div>\r\n        title:\r\n        <input\r\n          id='title'\r\n          type=\"text\"\r\n          value={title}\r\n          name=\"title\"\r\n          onChange={({ target }) => setTitle(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        author:\r\n        <input\r\n          id='author'\r\n          type=\"author\"\r\n          value={author}\r\n          name=\"author\"\r\n          onChange={({ target }) => setAuthor(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        url:\r\n        <input\r\n          id='url'\r\n          type=\"text\"\r\n          value={url}\r\n          name=\"url\"\r\n          onChange={({ target }) => setUrl(target.value)}\r\n        />\r\n      </div>\r\n      <button id='submit-blog' type=\"submit\">Create</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios\r\n    .post(baseUrl, credentials)\r\n    .catch(error => {\r\n      return error.response\r\n    })\r\n  return response\r\n}\r\n\r\nconst loginService = { login }\r\n\r\nexport default loginService","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAllUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst services = { getAllUsers }\r\nexport default services","import loginService from '../services/login'\r\nimport blogServices from '../services/blogs'\r\nimport userServices from '../services/users'\r\n\r\nconst initialState = {\r\n  allUsers: [],\r\n  loggedIn: null,\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'LOGIN_USER':\r\n    return { ...state, loggedIn: action.data }\r\n  case 'LOGOUT_USER':\r\n    return { ...state, loggedIn: null }\r\n  case 'SET_USERS':\r\n    return { ...state, allUsers: action.data }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async dispatch => {\r\n    const response = await loginService.login({\r\n      username, password,\r\n    })\r\n    if (response.status === 200) {\r\n      const user = response.data\r\n      blogServices.setToken(user.token)\r\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\r\n      dispatch({\r\n        type: 'LOGIN_USER',\r\n        data: user,\r\n      })\r\n      return true\r\n    } else {\r\n      console.log('failed login')\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\nexport const setLoggedInUser = user => {\r\n  return async dispatch => {\r\n    blogServices.setToken(user.token)\r\n    dispatch({\r\n      type: 'LOGIN_USER',\r\n      data: user,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'LOGOUT_USER',\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const data = await userServices.getAllUsers()\r\n    dispatch({\r\n      type: 'SET_USERS',\r\n      data,\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { loginUser } from '../reducers/userReducer'\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    const user = await dispatch(loginUser(username, password))\r\n    if (user) {\r\n      dispatch(setNotification('Login successful', true))\r\n    } else {\r\n      dispatch(setNotification('Login failed', false))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Log In To Application</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button id='login-button' type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\n\r\nconst User = () => {\r\n  const { id } = useParams()\r\n  const users = useSelector(state => state.users.allUsers)\r\n  const user = users.find(user => user.id === id)\r\n  if (!user) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{user.username}</h1>\r\n      <h3>Added Blogs</h3>\r\n      <ul>\r\n        {user.blogs.map(blog =>\r\n          <li key={blog.id}>{blog.title}</li>)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addComment } from '../reducers/blogReducer'\r\n\r\nconst CommentForm = ({ blogId }) => {\r\n  const [comment, setComment] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    dispatch(addComment(blogId, comment))\r\n    setComment('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Comments</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          id='comment'\r\n          type=\"text\"\r\n          value={comment}\r\n          name=\"Comment\"\r\n          onChange={({ target }) => setComment(target.value)}\r\n        />\r\n        <button id='submit-comment' type='submit'>Add Comment</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default CommentForm","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport CommentForm from './CommentForm'\r\nimport { likeBlog } from '../reducers/blogReducer'\r\n\r\n\r\nconst Blog = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const blogs = useSelector(state => state.blogs)\r\n  const blog = blogs.find(blog => blog.id === id)\r\n\r\n  const handleLike = () => {\r\n    dispatch(likeBlog(blog))\r\n  }\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{blog.title}</h1>\r\n      <a href={blog.url}>{blog.url}</a>\r\n      <p>{blog.likes} likes <button onClick={handleLike}>like</button></p>\r\n      <p>Added by {blog.user.username}</p>\r\n      <CommentForm blogId={blog.id}/>\r\n      <ul>\r\n        {blog.comments.map((comment, idx) =>\r\n          <li key={idx}>{comment}</li>)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { logoutUser } from '../reducers/userReducer'\r\n\r\nconst Navigation = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const loggedInUser = useSelector(state => state.users.loggedIn)\r\n\r\n  const handleLogOut = (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.clear()\r\n    dispatch(logoutUser())\r\n    history.push('/')\r\n  }\r\n  const style = {\r\n    paddingRight: 10\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <Link style={style} to={'/'}>Blogs</Link>\r\n      <Link style={style} to={'/users'}>Users</Link>\r\n      <span>{loggedInUser.username} logged in <button onClick={handleLogOut}>Logout</button></span>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Blogs from './components/BlogList'\r\nimport Users from './components/UserList'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Toggleable'\r\nimport BlogForm from './components/AddBlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport User from './components/User'\r\nimport Blog from './components/Blog'\r\nimport Navigation from './components/Navigation'\r\nimport { setLoggedInUser, initializeUsers } from './reducers/userReducer'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nconst App = () => {\r\n  const loggedInUser = useSelector((state) => state.users.loggedIn)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUsers())\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const userInfo = JSON.parse(loggedUserJSON)\r\n      dispatch(setLoggedInUser(userInfo))\r\n    }\r\n  }, [])\r\n\r\n  if (loggedInUser) {\r\n    return (\r\n      <div className='container'>\r\n        <Notification />\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path='/blogs/:id'>\r\n            <Blog />\r\n          </Route>\r\n          <Route path='/users/:id'>\r\n            <User />\r\n          </Route>\r\n          <Route path='/users'>\r\n            <Users />\r\n          </Route>\r\n          <Route path='/'>\r\n            <div>\r\n              <h1>Blogs App</h1>\r\n            </div>\r\n            <div>\r\n              <Togglable buttonLabel='Create New Blog'>\r\n                <BlogForm />\r\n              </Togglable>\r\n              <Blogs />\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <Togglable buttonLabel='login'>\r\n        <Notification />\r\n        <LoginForm />\r\n      </Togglable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notifications: notificationReducer,\r\n  users: userReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}